@using UtilityExtensions
@using CmsWeb
@model CmsWeb.Models.OnlineRegPersonModel
@{ var index = Model.Index; }
<tr>
  <td class="right" colspan="2">
    @Html.Required()
    required
  </td>
</tr>
<tr>
  <td class="top" nowrap="nowrap" width="30%">
    @Html.Required()
    <label id="personedit" for="first">
      First Name:
    </label>
  </td>
  <td>
    @Html.TextBoxFor(m => m.FirstName, new { @class = "wide" })
    <div>
      @Html.ValidationMessageFor(m => m.FirstName)
    </div>
  </td>
</tr>
<tr>
  <td class="top" nowrap="nowrap">
    @Html.NotRequired()
    <label for="middle">
      Middle Initial:
    </label>
  </td>
  <td>
    @Html.TextBoxFor(m => m.MiddleName, new { @class = "wide" })
  </td>
</tr>
<tr>
  <td class="top" nowrap="nowrap">
    @Html.Required()
    <label for="last">
      Last Name:
    </label>
  </td>
  <td>
    @Html.TextBoxFor(m => m.LastName, new { @class = "wide" })
    <div>
      @Html.ValidationMessageFor(m => m.LastName)
    </div>
  </td>
</tr>
<tr>
  <td class="top" nowrap="nowrap">
    @Html.NotRequired()
    <label for="last">
      Suffix:
    </label>
  </td>
  <td>
    @Html.TextBoxFor(m => m.Suffix, new { @class = "short" })
  </td>
</tr>
<tr>
  <td class="top" nowrap="nowrap">
    @Html.IsRequired(Model.RequiredDOB())
    <label for="dob">
      Birthdate:
    </label>
  </td>
  <td>
    @Html.TextBox3("dob", Html.NameFor2(m => m.DateOfBirth), Model.DateOfBirth, new { @class = "dob" })
  @if (Model.LoggedIn)
  {
    @:(<span id="age">@Model.age</span>)
        }
  <div>
    @Html.ValidationMessageFor(m => m.DateOfBirth)
  </div>
</td>
</tr>
<tr>
  <td class="top" nowrap="nowrap">
    @* Show Cell phone because HomePhone is already asked for in address *@
    @if (Model.ShowAddress)
    {
      @Html.IsRequired(Model.RequiredPhone())
      <label for="phone">Cell Phone:</label>
    }
    // Otherwise just ask for Generic Phone
    else
    {
      @Html.NotRequired()
      <label for="phone">Phone:</label>
    }
  </td>
  <td>
    @Html.TextBoxFor(m => m.Phone, new { @class = "wide" })
    <div>
      @Html.ValidationMessageFor(m => m.Phone)
    </div>
  </td>
</tr>
<tr>
  <td class="top" nowrap="nowrap">
    @Html.Required()
    <label for="email">
      Email:
    </label>
  </td>
  <td>
    @Html.TextBoxFor(m => m.EmailAddress, new { @class = "wide" })
    <div>
      @Html.ValidationMessageFor(m => m.EmailAddress)
    </div>
  </td>
</tr>
@* show the address fields *@
@if (Model.ShowAddress)
{
  @Html.Partial("Flow/AddressEdit", Model)
  <tr>
    <td></td>
    @* allow submit here for manage subscriptions *@
    @if (Model.ManageSubscriptions())
    {
      <td class="right">
        <input type="button" href="/OnlineReg/SubmitNew/@index" class="submitbutton ajax"
               value="Submit" />
        @* only allow adults to create an account *@
        @if ((Model.age >= 16 || !Model.birthday.HasValue) && !Model.IsMissionTrip())
        {
          <div>
            @Html.CheckBoxFor(m => m.CreatingAccount)
          Create Account (optional)
        </div>
        }
      </td>
    }
    // submit for a new person here
    else
    {
      <td class="right">
        <input type="button" href="/OnlineReg/SubmitNew/@index" class="submitbutton ajax"
               value="Submit" />
      </td>
    }
  </tr>
}
// we're not showing the address yet, still searching or finding
else
{
  // we have not searched for the person yet, let them find their profile
  if (!Model.Found.HasValue)
  {
    <tr>
      <td colspan="2" class="right">
        @*
          <script type="text/javascript">
              $("div.instructions").hide();
              $("div.instructions.find").show();
          </script>
        *@
        <input type="button" href="/OnlineReg/PersonFind/@index" class="submitbutton ajax"
               value="Find Profile" />
        @if (Model.Parent.AllowSaveProgress())
        {
          <div>
            <input type="button" href="/OnlineReg/SaveProgress/@index" class="submitbutton ajax"
                   value='Save Progress, Finish Later' />
          </div>
        }
      </td>
    </tr>
  }
  // display the results of the find
  else
  {
    <tr>
      <td colspan="2">
        <div>
          @Html.ValidationMessageFor(m => m.Found)
        </div>
        <div>
          @Html.Raw(Model.NotFoundText)
        </div>
      </td>
    </tr>
    // Show how to add this person (to family, previous, new) did not find them
    if (Model.Found == false)
    {
      <tr>
        <td class="right" colspan="2">
          <table>
            @* allow adding to a new family if we are logged in or beyond the first registrant *@
            @if (index > 0 || Model.LoggedIn)
            {
              <tr>
                <td class="left">
                  Add to which family?
                </td>
              </tr>
              <tr>
                <td class="left">
                  @Html.RadioButtonFor(m => m.whatfamily, "3") New
                </td>
              </tr>
            }
            // assume this is going to a new family if not logged in and on first registrant
            else
            {
              Model.whatfamily = 3;
              @Html.HiddenFor(m => m.whatfamily)
            }
            @* allow adding to previous registrant's family if we are not on the first registrant *@
            @if (index > 0)
            {
              <tr>
                <td class="left">
                  @Html.RadioButtonFor(m => m.whatfamily, "2")
                  Previous
                </td>
              </tr>
            }
            @* if logged in, allow adding to logged in family *@
            @if (Model.LoggedIn)
            {
              <tr>
                <td class="left">
                  @Html.RadioButtonFor(m => m.whatfamily, "1")
                  Mine
                </td>
              </tr>
            }
            <tr>
              <td class="left">
                @Html.ValidationMessageFor(m => m.whatfamily)
              </td>
            </tr>
          </table>
        </td>
      </tr>
    }
    <tr>
      <td colspan="2" class="right">
        <input type="button" style="display: inline-block" href="/OnlineReg/PersonFind/@index" class="submitbutton ajax"
               value="Search Again" />
        @* Allow Add New Profile if valid data, not a memberonly type registration and not in create account mode *@
        @if (Model.IsValidForContinue && !Model.MemberOnly() && Model.orgid != Util.CreateAccountCode)
        {
          @:or <input type="button" id="regnew" href="/OnlineReg/ShowMoreInfo/@index" class="submitbutton ajax" value="Add New Profile" />
		    }
        // display helpful message if an anonomous person is trying to create an account
        else if (Model.orgid == Util.CreateAccountCode)
        {
          <p>
            Call the church if you think your record should be in the system. It may be that
            we are missing some information on your record that we need to identify you like
            a phone number, date of birth or email address.
          </p>
        }
        @if (Model.Parent.AllowSaveProgress())
        {
          <div>
            <input type="button" href="/OnlineReg/SaveProgress/@index" class="submitbutton ajax"
                   value='Save Progress, Finish Later' />
          </div>
        }
      </td>
    </tr>
  }
}
